syntax = "proto3";

option java_multiple_files = true;
option java_package = "cc.litstar.rpc";
option java_outer_classname = "RaftProto";

// Raft service definition.
service Raft {
	//rpc SayHello (HelloRequest) returns (HelloReply) {}
	rpc RaftRequestVoteRpc (RequestVoteArgs) returns (RequestVoteReply) {};
	rpc RaftAppendEntriesRpc (AppendEntriesArgs) returns (AppendEntriesReply) {};
	rpc RaftInstallSnapshotRpc (InstallSnapshotArgs) returns (InstallSnapshotReply) {};
	rpc RaftClientSubmitRpc (ClientSubmitRequest) returns (ClientSubmitReply) {};
}

// 请求投票RPC参数
message RequestVoteArgs {
	int32 Term = 1;
	int32 CandidateId = 2;
	int32 LastLogTerm = 3;
	int32 LastLogIndex = 4;
}

// 请求投票RPC回复
message RequestVoteReply {
	int32 Term = 1;
	bool VoteGranted = 2;
}

// 附加日志RPC参数(由领导人发送)
// 空日志项为心跳，否则带有信息
message AppendEntriesArgs {
	int32 Term = 1;
	int32 LeaderId = 2;
	int32 PrevLogTerm = 3;
	int32 PrevLogIndex = 4;
	message LogEntry {
		int32 LogIndex = 1;
		int32 LogTerm = 2;
		string Op = 3;
		string Data = 4;
	}
	repeated LogEntry Entries = 5;
	int32 LeaderCommit = 6;
}

// 附加日志RPC返回值
message AppendEntriesReply {
	int32 Term = 1;
	bool Success = 2;
	int32 NextIndex = 3;
}

// 安装快照RPC
message InstallSnapshotArgs {
	int32 Term = 1;
	int32 LeaderId = 2;
	int32 LastIncludedIndex = 3;
	int32 LastIncludedTerm = 4;
	string Data = 5;
}

// 安装快照RPC返回值
message InstallSnapshotReply {
	int32 Term = 1;
}

// 用户提交一个操作
// 每次操作轮询节点直到可以操作
message ClientSubmitRequest {
	string Op = 1;
	string Data = 2;
}

// 返回操作是否能被提交(只能提交给Leader)
message ClientSubmitReply {
	bool CanSubmit = 1;
}
